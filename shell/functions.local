#!/bin/bash

# Check distro and version
function get_distro() {
    if [[ -f /etc/os-release ]]
    then
        # On Linux systems
        source /etc/os-release
        echo $ID
    else
        # On systems other than Linux (e.g. Mac or FreeBSD)
        uname
    fi
}

# Extract archive into directory with automatic dir name and delete original archive
function ex() {

        export FILENAME=$1
        export DIRNAME=$(${FILENAME} | cut -f 2 -d '.')
        export DESTDIR="${PWD}/${DIRNAME}"

        printf "DEBUG:\n"
        printf "VAR 1 - ${FILENAME}\n"
        printf "VAR 2 - ${DIRNAME}\n"
        printf "VAR 3 - ${DESTDIR}\n"
        printf "\n"

        printf "Extracting ${FILENAME} into ${DESTDIR}. Please wait...\n"
        tar -xzf --one-top-level="${DIRNAME}" ${FILENAME} && cd ./${DIRNAME}
#       rm ../${FILENAME}

        printf "Complete!"
}

#!/usr/bin/env bash

# `.functions` provides helper functions for shell.
#
# This file is used as a part of `.shell_env`


# === Commonly used functions ===

pyclean () {
  # Cleans py[cod] and cache dirs in the current tree:
  find . \
    | grep -E "(__pycache__|\.(mypy_)?cache|\.hypothesis\.py[cod]$)" \
    | xargs rm -rf
}


git-dowloadfolder () {
  # Downloads folder from git repository.
  url="$1"
  svn checkout ${url/tree\/master/trunk}
}


mc () {
  # Create a new directory and enter it
  mkdir -p "$@" && cd "$@"
}


cdf () {
  # cd into whatever is the forefront Finder window.
  local path=$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')
  echo "$path"
  cd "$path"
}


# From Dan Ryan's blog - http://danryan.co/using-antigen-for-zsh.html
man () {
  # Shows pretty `man` page.
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
      man "$@"
}


# Loads `.env` file from a filename passed as an argument
loadenv () {
  while read line; do
    if [ "${line:0:1}" = '#' ]; then
      continue  # comments are ignored
    fi
    export $line > /dev/null
  done < "$1"
  echo 'Loaded!'
}


# Sets up all my working env
workon () {
  if _z 2>&1 "$1"; then
    source '.venv/bin/activate' || true  # There might be no `.venv`
    code .
  fi
}

